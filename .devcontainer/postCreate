#!/usr/bin/env bash

# Copyright (c) 2023 Eliah Kagan
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

set -e

readonly graphviz_version='7.1.0'

msg() {
    printf '%s: %s\n' "$0" "$1" >&2
}

nl() {
    printf '\n' >&2
}

# TODO: Customize bash and zsh prompts to indicate staged and unstaged changes.
#       Note that devcontainers-theme.show-dirty isn't enough to achieve this.

msg 'Customizing fish shell integration for git...'
fish -c 'set -U __fish_git_prompt_color_cleanstate brgreen'
fish -c 'set -U __fish_git_prompt_show_informative_status true'
fish -c 'set -U __fish_git_prompt_showcolorhints true'
fish -c 'set -U __fish_git_prompt_showuntrackedfiles true'
fish -c 'set -U __fish_git_prompt_showupstream verbose'
msg '...fish shell integration for git is customized.'

nl

msg 'Setting up PowerShell integration for git...'
pwsh -c 'Set-PSRepository PSGallery -InstallationPolicy Trusted'
pwsh -c 'Install-Module -Name posh-git'
pwsh -c 'Add-PoshGitToProfile -AllHosts' # Do before "conda init powershell".
msg '...PowerShell integration for git set up.'

nl

msg 'Updating and configuring Mambaforge...'
mamba update --all --yes
mamba init bash fish powershell zsh
conda config --set auto_activate_base false
msg '...Mambaforge is updated and configured.'

nl

msg 'Building and installing Graphviz for when poetry is used...'
pushd /tmp
wget "https://gitlab.com/api/v4/projects/4207231/packages/generic/graphviz-releases/$graphviz_version/graphviz-$graphviz_version.tar.xz"
tar xf "graphviz-$graphviz_version.tar.xz"
pushd "graphviz-$graphviz_version"
./configure
make
sudo make install # Assumes sudo runs in the container without a password.
popd
rm -r "graphviz-$graphviz_version" "graphviz-$graphviz_version.tar.xz"
popd
msg '...built and installed Graphviz for when poetry is used.'

nl

msg 'Setting up project environment for poetry...'
poetry install
msg '...project environment for poetry is set up.'

nl

msg 'Setting up project environment for conda and mamba...'
mamba env create
mamba run -n palgoviz mamba develop .
msg '...project environment for conda and mamba is set up.'
